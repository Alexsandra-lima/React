{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexsandra\\\\Desktop\\\\AulaReact\\\\gamagit\\\\src\\\\Pages\\\\Repositories\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as S from './styled';\nexport default function Repositories() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    let repositoriesName = localStorage.getItem('repositoriesName');\n    repositoriesName = JSON.parse(repositoriesName);\n    setRepositories(repositoriesName);\n    localStorage.clear();\n  }, []);\n  return /*#__PURE__*/React.createElement(S.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(S.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Reposit\\xF3rios\"), /*#__PURE__*/React.createElement(S.List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, repositories.map(repository => {\n    return /*#__PURE__*/React.createElement(S.ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, \"Reposit\\xF3rio: \", repository);\n  })), /*#__PURE__*/React.createElement(S.LinkHome, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Voltar\"));\n}","map":{"version":3,"sources":["C:/Users/Alexsandra/Desktop/AulaReact/gamagit/src/Pages/Repositories/index.js"],"names":["React","useEffect","useState","S","Repositories","repositories","setRepositories","repositoriesName","localStorage","getItem","JSON","parse","clear","map","repository"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAGA,eAAe,SAASC,YAAT,GAAwB;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAvB;AACAF,IAAAA,gBAAgB,GAAGG,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAnB;AACAD,IAAAA,eAAe,CAACC,gBAAD,CAAf;AACAC,IAAAA,YAAY,CAACI,KAAb;AACH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,oBAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,CAAD,CAAG,IAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,YAAY,CAACQ,GAAb,CAAiBC,UAAU,IAAI;AAC5B,wBACI,oBAAC,CAAD,CAAG,QAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0BA,UAA1B,CADJ;AAGH,GAJA,CADL,CAFJ,eASI,oBAAC,CAAD,CAAG,QAAH;AAAY,IAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ;AAaH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as S from './styled';\r\n\r\n\r\nexport default function Repositories() {\r\n    const [repositories, setRepositories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let repositoriesName = localStorage.getItem('repositoriesName');\r\n        repositoriesName = JSON.parse(repositoriesName);\r\n        setRepositories(repositoriesName);\r\n        localStorage.clear();\r\n    }, []);\r\n\r\n    return (\r\n        <S.Container>\r\n            <S.Title>Repositórios</S.Title>\r\n            <S.List>\r\n                {repositories.map(repository => {\r\n                    return (\r\n                        <S.ListItem>Repositório: {repository}</S.ListItem>\r\n                    )\r\n                })}\r\n            </S.List>\r\n            <S.LinkHome to=\"/\">Voltar</S.LinkHome>\r\n        </S.Container>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}